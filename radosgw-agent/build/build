#!/bin/bash

set -ex

# Jenkins will set $RELEASE as a parameter in the job configuration.
if $RELEASE ; then
        # This is a formal release. Sign it with the release key.
        export GNUPGHOME=/home/jenkins-build/build/gnupg.ceph-release/
        export KEYID=9DCEEEAD
else
        # This is an automatic build. Sign it with the autobuild key.
        export GNUPGHOME=/home/jenkins-build/build/gnupg.autobuild/
        export KEYID=03C3951A
fi

HOST=$(hostname --short)
echo "Building on ${HOST}"
echo "  DIST=${DIST}"
echo "  BPTAG=${BPTAG}"
echo "  KEYID=${KEYID}"
echo "  WS=$WORKSPACE"
echo "  PWD=$(pwd)"
ls -l

if [[ -f /etc/redhat-release || -f /usr/bin/zypper ]] ; then
        rm -rf ./dist  # Remove any previous artifacts
        mkdir -p $WORKSPACE/dist/noarch
        mkdir -p $WORKSPACE/dist/SRPMS
        mkdir -p $WORKSPACE/dist/SPECS
        mkdir -p $WORKSPACE/dist/SOURCES
        suse=$(uname -n | grep -ic -e suse -e sles || true)
        if [ $suse -gt 0 ]
        then
            python setup.py clean
            python setup.py bdist_rpm
            if [ $? -eq 0 ]
            then
                mv dist/*.noarch.rpm $WORKSPACE/dist/noarch/.
                mv dist/*.src.rpm $WORKSPACE/dist/SRPMS
            fi
        else
            python setup.py clean
            python setup.py sdist --formats=gztar
            rpmdev-setuptree
            rpmdev-wipetree
            cp -avf ./dist/*.gz $HOME/rpmbuild/SOURCES
            cp -avf radosgw-agent.spec $WORKSPACE/dist/SPECS
            rpmbuild -ba $WORKSPACE/dist/SPECS/radosgw-agent.spec --target noarch
            if [ $? -ne 0 ] ; then
                rm -Rvf $WORKSPACE/dist/${DIST}/
            else
                cp -avf $HOME/rpmbuild/* $WORKSPACE/dist/
            fi
        fi
else
        # XXX MAGICAL, Fix this
        DEB_VERSION=$(dpkg-parsechangelog | sed -rne 's,^Version: (.*),\1, p')
        BP_VERSION=${DEB_VERSION}${BPTAG}
        DEBEMAIL="adeza@redhat.com" dch -D $DIST --force-distribution -b -v "$BP_VERSION" "$comment"
        dpkg-source -b .
        dpkg-buildpackage -k$KEYID
        RC=$?
        if [ $RC -eq 0 ] ; then
            cd $WORKSPACE
            mkdir -p dist
            mv ../*.changes ../*.dsc ../*.deb ../*.tar.gz dist/.

        fi
fi
