# macros

- scm:
    name: ceph-master
    scm:
      - git:
          url: https://github.com/ceph/ceph.git
          branches:
            - origin/master
          skip-tag: true
          timeout: 20
          basedir: "ceph-master"
          shallow-clone: true
          wipe-workspace: true

- scm:
    name: ceph-pr
    scm:
      - git:
          url: https://github.com/ceph/ceph.git
          branches:
            - origin/pr/${ghprbPullId}/merge
          refspec: +refs/pull/${ghprbPullId}/*:refs/remotes/origin/pr/${ghprbPullId}/*
          timeout: 20
          basedir: "ceph-pr"
          shallow-clone: true
          wipe-workspace: true

- scm:
    name: cbt
    scm:
      - git:
          url: https://github.com/ceph/cbt.git
          refspec: +refs/heads/master:refs/remotes/origin/master
          do-not-fetch-tags: true
          honor-refspec: true
          name: origin
          branches:
            - refs/heads/master
          timeout: 20
          wipe-workspace: false
          basedir: "cbt"
          skip-tag: true
          shallow-clone: true
          clean:
            after: true

- builder:
    name: run-cbt
    builders:
      - shell: |
          cd {src-dir}
          archive_dir={archive-basedir}/$(git rev-parse --short HEAD)
          if test -d $archive_dir ; then
              exit 0
          fi
          export NPROC=$(nproc)
          export FOR_MAKE_CHECK=true
          cxx_compiler=g++
          c_compiler=gcc
          for i in $(seq 11 -1 8); do
              if type -t clang-$i > /dev/null; then
                  cxx_compiler="clang++-$i"
                  c_compiler="clang-$i"
                  export CFLAGS=$(echo $CFLAGS | (sed -e 's/\-fstack-clash-protection//'))
                  break
              fi
          done
          if test {osd-flavor} = "crimson" ; then
              export WITH_SEASTAR=true
              # TODO use clang-10 on ubuntu/focal
              timeout 7200 src/script/run-make.sh \
                --cmake-args "-DCMAKE_CXX_COMPILER=$cxx_compiler -DCMAKE_C_COMPILER=$c_compiler -DCMAKE_BUILD_TYPE=Release -DWITH_SEASTAR=ON -DWITH_TESTS=OFF" \
                vstart-base crimson-osd
              src/script/run-cbt.sh --build-dir $PWD/build --source-dir $PWD --cbt ${{WORKSPACE}}/cbt -a $archive_dir src/test/crimson/cbt/radosbench_4K_read.yaml
          else
              timeout 7200 src/script/run-make.sh --cmake-args "-DCMAKE_BUILD_TYPE=Release -DWITH_TESTS=OFF" vstart-base
              src/script/run-cbt.sh --build-dir $PWD/build --source-dir $PWD --cbt ${{WORKSPACE}}/cbt -a $archive_dir src/test/crimson/cbt/radosbench_4K_read.yaml --classical
          fi

- builder:
    name: compare-cbt-results
    builders:
      - shell: |
          cd ${{WORKSPACE}}/{src-dir-master}
          archive_dir_master={archive-master}/$(git rev-parse --short HEAD)
          cd ${{WORKSPACE}}/{src-dir-pr}
          archive_dir_pr={archive-pr}/$(git rev-parse --short HEAD)
          ${{WORKSPACE}}/cbt/compare.py -v \
            -a $archive_dir_pr             \
            -b $archive_dir_master

- job-template:
    name: 'ceph-perf-{osd-flavor}'
    project-type: freestyle
    defaults: global
    concurrent: true
    # use lastest rhel and ubuntu for crimson for clang build
    node: performance
    display-name: 'ceph: {osd-flavor} perf test'
    quiet-period: 5
    block-downstream: false
    block-upstream: false
    retry-count: 3
    properties:
      - build-discarder:
          days-to-keep: 15
          num-to-keep: 300
          artifact-days-to-keep: -1
          artifact-num-to-keep: -1
      - github:
          url: https://github.com/ceph/ceph/
      - rebuild:
          auto-rebuild: true

    parameters:
      - string:
          name: ghprbPullId
          description: "the GitHub pull id, like '72' in 'ceph/pull/72'"

    triggers:
      - github-pull-request:
          allow-whitelist-orgs-as-admins: true
          org-list:
            - ceph
          trigger-phrase: 'jenkins test {osd-flavor} perf'
          skip-build-phrase: '^jenkins do not test.*'
          only-trigger-phrase: false
          white-list-labels:
            - performance
            - crimson
          github-hooks: true
          permit-all: true
          auto-close-on-fail: false
          status-context: "perf test"
          started-status: "running perf test"
          success-status: "perf test succeeded"
          failure-status: "perf test failed"
          cancel-builds-on-update: true

    scm:
      - ceph-master
      - ceph-pr
      - cbt

    builders:
      - shell: |
          cd ${{WORKSPACE}}/cbt
          source /etc/os-release || ID=ubuntu
          if test {osd-flavor} = "crimson" ; then
              extra_pkgs=clang
          fi
          case $ID in
          debian|ubuntu)
              sudo env DEBIAN_FRONTEND=noninteractive apt-get install -y python3-yaml python3-lxml python3-prettytable ${{extra_pkgs}};;
          centos|fedora|rhel)
              sudo yum install -y python3-pyyaml python3-lxml python3-prettytable ${{extra_pkgs}};;
          *)
              echo "unknown distro: $ID"
              exit 1
              ;;
          esac
      - run-cbt:
          src-dir: "ceph-master"
          osd-flavor: '{osd-flavor}'
          # ideally cbt-results should be persited across jobs, so the test result can be reused
          archive-basedir: "$WORKSPACE/cbt-results"
      - run-cbt:
          src-dir: "ceph-pr"
          osd-flavor: '{osd-flavor}'
          # use the basedir of git checkout, so it can be wiped
          archive-basedir: "$WORKSPACE/ceph-pr"
      - compare-cbt-results:
          src-dir-master: "ceph-master"
          archive-master: "$WORKSPACE/cbt-results"
          src-dir-pr: "ceph-pr"
          archive-pr: "$WORKSPACE/ceph-pr"

    publishers:
      - postbuildscript:
          builders:
            - role: SLAVE
              build-on:
                  - FAILURE
                  - ABORTED
              build-steps:
                - shell: "sudo reboot"
- project:
    name: ceph-perf
    osd-flavor:
      - crimson
      - classic
    jobs:
      - ceph-perf-{osd-flavor}
