# ======================================================================
# Jenkins Job Builder (JJB) definition for Ceph Pull Request tests
# This job runs the "make check" CI on GitHub PRs, builds the PR code,
# executes tests, collects coverage/xUnit reports, and posts status back to GitHub.
# ======================================================================

- job:
    name: ceph-pull-requests                 # Unique Jenkins job name
    project-type: freestyle                  # Freestyle job type
    defaults: global                         # Inherit global defaults
    concurrent: true                         # Allow concurrent builds
    # Run only on Bionic nodes because it has Python2 & Python3 and all builds should run here
    node: huge && bionic && x86_64 && !smithi
    display-name: 'ceph: Pull Requests'      # Human-readable display name
    quiet-period: 5                          # Wait (seconds) after trigger before starting
    block-downstream: false                  # Do not block downstream jobs
    block-upstream: false                    # Do not block upstream jobs
    retry-count: 3                           # Retry job 3 times on failure

    # ------------------------------------------------------------------
    # Job properties
    # ------------------------------------------------------------------
    properties:
      - build-discarder:                     # Manage build and artifact retention
          days-to-keep: 15
          num-to-keep: 300
          artifact-days-to-keep: -1
          artifact-num-to-keep: -1
      - github:                              # Associate job with GitHub repo
          url: https://github.com/ceph/ceph/
      - rebuild:                             # Enable automatic rebuilds
          auto-rebuild: true
      - inject:                              # Inject environment variables
          properties-content: |
            TERM=xterm

    # ------------------------------------------------------------------
    # Job parameters
    # ------------------------------------------------------------------
    parameters:
      - string:
          name: ghprbPullId                 # Pull request ID to build
          description: "the GitHub pull id, like '72' in 'ceph/pull/72'"

    # ------------------------------------------------------------------
    # Job triggers
    # ------------------------------------------------------------------
    triggers:
      - github-pull-request:
          cancel-builds-on-update: true      # Cancel current build if PR updated
          allow-whitelist-orgs-as-admins: true
          org-list:
            - ceph                           # Only allow PRs from Ceph org
          trigger-phrase: 'jenkins test make check'    # Manual trigger phrase
          skip-build-phrase: '^jenkins do not test.*'
          only-trigger-phrase: false
          github-hooks: true                 # Enable webhook-based triggering
          permit-all: true                   # Permit all PR authors
          auto-close-on-fail: false
          status-context: "make check"      # GitHub PR status context
          started-status: "running make check"
          success-status: "make check succeeded"
          failure-status: "make check failed"

    # ------------------------------------------------------------------
    # Source Code Management (SCM)
    # ------------------------------------------------------------------
    scm:
      - git:
          url: https://github.com/ceph/ceph.git
          branches:
            - origin/pr/${{ghprbPullId}}/merge  # Build PR merge branch
          refspec: +refs/pull/${{ghprbPullId}}/*:refs/remotes/origin/pr/${{ghprbPullId}}/*
          browser: auto
          timeout: 20
          skip-tag: true
          shallow-clone: true
          honor-refspec: true
          wipe-workspace: true                 # Clean workspace before build

    # ------------------------------------------------------------------
    # Builders: run shell scripts to build the code
    # ------------------------------------------------------------------
    builders:
    - shell:
        !include-raw-verbatim:
          - ../../../scripts/build_utils.sh
          - ../../build/build

    # ------------------------------------------------------------------
    # Post-build actions
    # ------------------------------------------------------------------
    publishers:
      - cobertura:                          # Collect code coverage report
          report-file: "src/pybind/mgr/dashboard/frontend/coverage/cobertura-coverage.xml"
          only-stable: "true"
          health-auto-update: "false"
          stability-auto-update: "false"
          zoom-coverage-chart: "true"
          source-encoding: "Big5"
          targets:
            - files:
                healthy: 10
                unhealthy: 20
                failing: 30
            - method:
                healthy: 10
                unhealthy: 20
                failing: 30

      - postbuildscript:                     # Cleanup after aborted builds
          builders:
            - role: SLAVE
              build-on:
                - ABORTED
              build-steps:
                - shell:
                    !include-raw-verbatim:
                      - ../../build/kill-tests

      - xunit:                               # Collect test results
          thresholds:
            - failed:
                unstable: 0
                unstablenew: 0
                failure: 0
                failurenew: 0
          types:
            - ctest:
                pattern: "build/Testing/**/Test.xml"
                skip-if-no-test-files: true

    # ------------------------------------------------------------------
    # Wrappers: console color + GitHub credentials
    # ------------------------------------------------------------------
    wrappers:
      - ansicolor                            # Enable ANSI color in console logs
      - credentials-binding:                 # Inject GitHub credentials into build
          - username-password-separated:
              credential-id: github-readonly-token
              username: GITHUB_USER
              password: GITHUB_PASS
