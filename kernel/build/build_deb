#!/bin/bash
set -ex

cd $WORKSPACE

# slap -rc to the ref if we are doing a release-candidate build
chacra_ref="$BRANCH"
[ "$RC" = true ] && chacra_ref="$BRANCH-rc"
[ "$TEST" = true ] && chacra_ref="test"

DEB_ARCH=$(dpkg-architecture -qDEB_BUILD_ARCH)
DISTRO=""
case $DIST in
    jessie|wheezy)
        DISTRO="debian"
        ;;
    *)
        DISTRO="ubuntu"
        ;;
esac

debian_version=${VERSION}-1

BPVER=`gen_debian_version $debian_version $DIST`

chacra_endpoint="kernel/${BRANCH}/${GIT_COMMIT}/${DISTRO}/${DIST}"
chacra_check_url="${chacra_endpoint}/kernel_${BPVER}_${DEB_ARCH}.deb"

if [ "$THROWAWAY" = false ] ; then
    # this exists in scripts/build_utils.sh
    check_binary_existence $VENV $chacra_check_url
fi

HOST=$(hostname --short)
echo "Building on $(hostname)"
echo "  DIST=${DIST}"
echo "  DEB_ARCH=${DEB_ARCH}"
echo "  WS=$WORKSPACE"
echo "  PWD=$(pwd)"
echo "*****"
env
echo "*****"

# Clean the upper level debs
rm -f ../*.deb

# Build the debs
echo "Building DEBs"
KDEB_SOURCENAME="linux-$kernelrelease" make -j$(getconf _NPROCESSORS_ONLN) bindeb-pkg

# Make sure we execute at the top level directory
cd "$WORKSPACE"

[ "$FORCE" = true ] && chacra_flags="--force" || chacra_flags=""

if [ "$THROWAWAY" = false ] ; then
    # push binaries to chacra
    find ../*.deb | $VENV/chacractl binary ${chacra_flags} create ${chacra_endpoint}/${ARCH}/
    PACKAGE_MANAGER_VERSION=$(dpkg-deb -f $(find ../*"$DEB_ARCH".deb | head -1) Version)

    # write json file with build info
    cat > $WORKSPACE/repo-extra.json << EOF
{
    "version":"$kernelrelease",
    "package_manager_version":"$PACKAGE_MANAGER_VERSION",
    "build_url":"$BUILD_URL",
    "root_build_cause":"$ROOT_BUILD_CAUSE",
    "node_name":"$NODE_NAME",
    "job_name":"$JOB_NAME"
}
EOF
    # post the json to repo-extra json to chacra
    curl -X POST -H "Content-Type:application/json" --data "@$WORKSPACE/repo-extra.json" -u $CHACRACTL_USER:$CHACRACTL_KEY ${chacra_url}repos/${chacra_endpoint}/extra/

    # start repo creation
    $VENV/chacractl repo update ${chacra_endpoint}

    echo Check the status of the repo at: https://shaman.ceph.com/api/repos/${chacra_endpoint}
fi

# update shaman with the completed build status
update_build_status "completed" "kernel" $NORMAL_DISTRO $NORMAL_DISTRO_VERSION $ARCH
