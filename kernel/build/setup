#!/bin/bash
#
# Ceph distributed storage system
#
# Copyright (C) 2016 Red Hat <contact@redhat.com>
#
# Author: Boris Ranto <branto@redhat.com>
#
#  This library is free software; you can redistribute it and/or
#  modify it under the terms of the GNU Lesser General Public
#  License as published by the Free Software Foundation; either
#  version 2.1 of the License, or (at your option) any later version.
#
set -ex
HOST=$(hostname --short)
echo "Building on $(hostname)"
echo "  DIST=${DIST}"
echo "  BPTAG=${BPTAG}"
echo "  KEYID=${KEYID}"
echo "  WS=$WORKSPACE"
echo "  PWD=$(pwd)"
echo "  BUILD SOURCE=$COPYARTIFACT_BUILD_NUMBER_CEPH_SETUP"
echo "*****"
env
echo "*****"

if test $(id -u) != 0 ; then
    SUDO=sudo
fi
export LC_ALL=C # the following is vulnerable to i18n

if test -f /etc/redhat-release ; then
    $SUDO yum install -y elfutils-libelf-devel  # for ORC unwinder
    $SUDO yum install -y flex bison  # for Kconfig
    $SUDO yum install -y dwarves
    $SUDO yum install -y elfutils-devel  # for dwarf.h

    # Set vars for shaman status updating
    get_rpm_dist
    NORMAL_DISTRO=$DISTRO
    NORMAL_DISTRO_VERSION=$DISTRO_VERSION
fi

if which apt-get > /dev/null ; then
    $SUDO apt-get install -y lsb-release
    $SUDO apt-get install -y libelf-dev  # for ORC unwinder
    $SUDO apt-get install -y flex bison  # for Kconfig
    $SUDO apt-get install -y dwarves
    $SUDO apt-get install -y libdw-dev  # for dwarf.h

    # Set vars for shaman status updating
    DISTRO=$(lsb_release -si)
    NORMAL_DISTRO=${DISTRO,,}
    NORMAL_DISTRO_VERSION=$AVAILABLE_DIST
fi

case $DISTRO in
rhel|centos|fedora|sles|opensuse-leap)
        case $DISTRO in
            opensuse)
                $SUDO zypper -y yum-utils
                ;;
            *)
                $SUDO yum install -y yum-utils mock
                ;;
        esac
        ;;
*)
        echo "$DISTRO is unknown, dependencies will have to be installed manually."
        ;;
esac

pkgs=( "chacractl>=0.0.21" )
TEMPVENV=$(create_venv_dir)
VENV=${TEMPVENV}/bin
install_python_packages $TEMPVENV "pkgs[@]"

# ask shaman which chacra instance to use
chacra_url=`curl -u $SHAMAN_API_USER:$SHAMAN_API_KEY https://shaman.ceph.com/api/nodes/next/`
make_chacractl_config $chacra_url

BRANCH=$(branch_slash_filter $BRANCH)

# Make sure we execute at the top level directory
cd "$WORKSPACE"

# Clean the git repo
git clean -fxd

# Export the SHA1 so links work here: https://shaman.ceph.com/builds/kernel/
# This gets sent to update_build_status which calls submit_build_status in build_utils.sh.
export SHA1="${GIT_COMMIT}"

# create build status in shaman
update_build_status "started" "kernel" $NORMAL_DISTRO $NORMAL_DISTRO_VERSION $ARCH
