#!/bin/bash

set -ex
HOST=$(hostname --short)
echo "Building on $(hostname)"
echo "  DIST=${DIST}"
echo "  BPTAG=${BPTAG}"
echo "  KEYID=${KEYID}"
echo "  WS=$WORKSPACE"
echo "  PWD=$(pwd)"
echo "  BUILD SOURCE=$COPYARTIFACT_BUILD_NUMBER_CEPH_SETUP"
echo "*****"
env
echo "*****"

if test $(id -u) != 0 ; then
    SUDO=sudo
fi
export LC_ALL=C # the following is vulnerable to i18n

BRANCH=`branch_slash_filter $BRANCH`

cd ${WORKSPACE}/dist
vers=$(cat version)
raw_version=`echo $vers | cut -d '-' -f 1`
RELEASE_BRANCH=$(release_from_version $raw_version)

# unpack the tar.gz that contains the source
tar xzf *.orig.tar.gz
cd $(basename *.orig.tar.gz .orig.tar.gz | sed s/_/-/)
pwd

raw_version_major=$(echo $vers | cut -d '.' -f 1)
if [ 0${raw_version_major} -lt 16 ]; then
    echo The following Ceph release does not support Windows: $RELEASE_BRANCH
    exit 1
fi

# Normalize variables across rpm/deb builds
NORMAL_DISTRO=$DIST
NORMAL_DISTRO_VERSION="1809"
NORMAL_ARCH=$ARCH

# create build status in shaman
update_build_status "started" "ceph" $NORMAL_DISTRO $NORMAL_DISTRO_VERSION $NORMAL_ARCH

pkgs=( "chacractl>=0.0.21" )
TEMPVENV=$(create_venv_dir)
VENV=${TEMPVENV}/bin
install_python_packages $TEMPVENV "pkgs[@]"

# ask shaman which chacra instance to use
chacra_url=`curl -u $SHAMAN_API_USER:$SHAMAN_API_KEY https://shaman.ceph.com/api/nodes/next/`
# create the .chacractl config file using global variables
make_chacractl_config $chacra_url

FLAVOR="default"

chacra_ref="$BRANCH"
chacra_endpoint="ceph/${chacra_ref}/${SHA1}/${DIST}/${NORMAL_DISTRO_VERSION}"
chacra_binary_endpoint="${chacra_endpoint}/${ARCH}/flavors/${FLAVOR}"
chacra_repo_endpoint="${chacra_endpoint}/flavors/${FLAVOR}"
chacra_check_url="${chacra_binary_endpoint}/ceph.zip"

if [ "$THROWAWAY" = false ] ; then
    # this exists in scripts/build_utils.sh
    # TODO if this exits we need to post to shaman a success
    check_binary_existence $VENV $chacra_check_url
fi

# We need Ubuntu >= Jammy to cross-compile Ceph for Windows.
# Previous versions provide broken Mingw packages/too old gcc.
# "DIST" will be set to "windows", so we're currently overriding it with
# a hardcoded value.
DIST="jammy"
setup_pbuilder use_gcc
DIST="$NORMAL_DISTRO"
