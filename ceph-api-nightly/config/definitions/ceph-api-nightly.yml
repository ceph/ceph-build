- project:
    name: ceph-api-nightly
    ceph_branch:
      - main
      - tentacle
      - squid
      - reef
    test_suite:
      - backend:
          test_suite_script: run-backend-api-tests.sh
          test_deps_script: install-backend-api-test-deps.sh
      - e2e:
          test_suite_script: run-frontend-e2e-tests.sh
          test_deps_script: install-e2e-test-deps.sh
    jobs:
      - '{name}-{ceph_branch}-{test_suite}'

- job-template:
    name: '{name}-{ceph_branch}-{test_suite}'
    display-name: '{name}-{ceph_branch}-{test_suite}'
    project-type: freestyle
    defaults: global
    concurrent: true
    node: huge && bionic && x86_64
    quiet-period: 5
    block-downstream: false
    block-upstream: false
    retry-count: 3
    properties:
      - build-discarder:
          days-to-keep: 15
          num-to-keep: 300
          artifact-days-to-keep: -1
          artifact-num-to-keep: -1
      - github:
          url: https://github.com/ceph/ceph/
      - rebuild:
          auto-rebuild: true
      - inject:
          properties-content: |
            TERM=xterm
    ceph_build: "export FOR_MAKE_CHECK=1; timeout 2h ./src/script/run-make.sh --cmake-args '-DWITH_TESTS=OFF -DENABLE_GIT_VERSION=OFF'"

    triggers:
      - timed: '@midnight'

    scm:
      - git:
          url: https://github.com/ceph/ceph.git
          branches:
            - '{ceph_branch}'
          browser: auto
          timeout: 20
          skip-tag: true
          shallow-clone: true
          wipe-workspace: true

    builders:
      - shell:
          !include-raw-escape:
            - ../../build/cleanup
      - shell: "export NPROC=$(nproc); {ceph_build}"
      - shell:
          !include-raw-verbatim:
            -  ../../../scripts/dashboard/{test_deps_script}
      - shell: |
          export CYPRESS_ARGS="--record --key $CYPRESS_RECORD_KEY --tag $JOB_NAME" COMMIT_INFO_MESSAGE="$JOB_NAME"
          export APPLITOOLS_BATCH_ID="${{JOB_NAME}}_${{BUILD_TAG}}"
          export APPLITOOLS_BATCH_NAME="Nightly-${{GIT_BRANCH#*/}}"
          export APPLITOOLS_BRANCH_NAME="${{GIT_BRANCH#*/}}"
          mkdir -p .applitools
          echo "$APPLITOOLS_BATCH_ID" > .applitools/BATCH_ID
          cd src/pybind/mgr/dashboard; timeout 2h ./{test_suite_script}

    wrappers:
      - inject-passwords:
          global: true
          mask-password-params: true
      - credentials-binding:
          - text:
              credential-id: cd-cypress-record-key
              variable: CYPRESS_RECORD_KEY
          - text:
              credential-id: cd-applitools-api-key
              variable: APPLITOOLS_API_KEY
      - raw:
          xml: |
            <com.applitools.jenkins.ApplitoolsBuildWrapper plugin="applitools-eyes@1.13">
              <serverURL>https://eyes.applitools.com</serverURL>
              <notifyByCompletion>true</notifyByCompletion>
              <applitoolsApiKey/>
            </com.applitools.jenkins.ApplitoolsBuildWrapper>
 
      - ansicolor

    publishers:
      - archive:
          artifacts: 'build/out/*.log, build/run/1/out/*.log, build/run/2/out/*.log'
          allow-empty: true
          latest-only: false
