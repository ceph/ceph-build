---
- name: ensure a clean clone
  file:
    path: ceph
    state: absent

- name: clone the ceph repository
  git:
    repo: https://github.com/ceph/ceph
    dest: ceph
    remote: upstream
    accept_hostkey: yes
    recursive: false

- name: add releases repo
  command: git remote add -f releases git@github.com:ceph/ceph-releases.git
  args:
    chdir: ceph
  ignore_errors: yes

- name: add security repo
  command: git remote add -f security git@github.com:ceph/ceph-private.git
  args:
    chdir: ceph
  ignore_errors: yes
  when: "release == 'SECURITY'"

- name: git fetch --all
  command: git fetch --all
  args:
    chdir: ceph

# REGULAR / RC / HOTFIX
# This assumes {{ branch }} has been pushed to {{ branch }}-release and is ready to be built
- name: "git checkout {{ branch }}-release for non-SECURITY release"
  command: git checkout -f -B {{ branch }}-release upstream/{{ branch }}-release
  args:
    chdir: ceph
  when:
    - "release != 'SECURITY'"
    - tag|bool is true

- name: "git checkout previously existing tag for re-build"
  command: git checkout -f v{{ version }}
  args:
    chdir: ceph
  when:
    - "release != 'SECURITY'"
    - tag|bool is false

# SECURITY
- name: "git checkout security {{ branch }}-release branch"
  command: git checkout -f -B {{ branch }}-release security/{{ branch }}-release
  args:
    chdir: ceph
  ignore_errors: yes
  when: "release == 'SECURITY'"

- name: git submodule update
  command: git submodule update --init
  args:
    chdir: ceph

- name: check if CMakeLists.txt exists
  stat:
    path: ceph/CMakeLists.txt
  register: cmake_lists

- name: replace the version in CMakeLists.txt
  lineinfile:
    dest: ceph/CMakeLists.txt
    regexp: '^  VERSION \d+\.\d+\.\d+$'
    line: '  VERSION {{ version }}'
  when:
    - cmake_lists.stat.exists
    - tag|bool is true

- set_fact:
    dch_release_type: rc
  when: "release == 'RELEASE_CANDIDATE'"

- name: set the debian version
  command: dch -v {{ version }}-1 -D {{ dch_release_type|default('stable') }} "New upstream release"
  args:
    chdir: ceph
  environment:
    DEBEMAIL: "{{ debemail }}"
    DEBFULLNAME: "{{ debfullname }}"
  when: tag|bool is true

- name: git config user.name
  command: git config user.name "Ceph Release Team"
  args:
    chdir: ceph
  when: tag|bool is true

- name: git config user.email
  command: git config user.email "ceph-maintainers@ceph.io"
  args:
    chdir: ceph
  when: tag|bool is true

- name: commit the version changes
  command: git commit -a -s -m "{{ version }}"
  args:
    chdir: ceph
  when: tag|bool is true

- name: tag the version
  command: git tag -f "v{{ version }}" -m "v{{ version }}"
  args:
    chdir: ceph
  when: tag|bool is true

- name: push the version commit to ceph-releases.git
  command: git push -f releases {{ branch }}-release
  args:
    chdir: ceph
  when: tag|bool is true

# the colon appended to the v{{ version }} tag removes the previous tag
# https://git-scm.com/docs/git-push#Documentation/git-push.txt--d
- name: clear the previous remote tag
  command: git push releases :v{{ version }}
  args:
    chdir: ceph
  ignore_errors: yes
  when: tag|bool is true

- name: push the tag to ceph-releases.git
  command: git push releases v{{ version }}
  args:
    chdir: ceph
  when: tag|bool is true
