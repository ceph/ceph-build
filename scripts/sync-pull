#!/bin/bash -ex
# vim: ts=2:sw=2:expandtab

: ${3?"Usage: $0 \$project \$release \$sha1"}
  #  Script exits here if command-line parameter absent,
  #+ with following error message.
  #    usage-message.sh: 1: Usage: sync-pull $project $release $sha1

project=${1}
release=${2}
sha1=${3}

echo "sync for: $project $release"
echo "********************************************"

if [[ "$project" == "ceph" ]] ; then
  # This ugly loop checks all possible DEB combinations to see which repo has the most packages since that's likely the repo you want to sync.
  current_highest_count=0
  for combo in debian/bookworm debian/bullseye ubuntu/bionic ubuntu/focal ubuntu/jammy ubuntu/noble; do
    combo_count=$(curl -fs https://chacra.ceph.com/r/$project/$release/$sha1/${combo}/flavors/default/pool/main/c/ceph/ | wc -l || /bin/true)
    if [[ ${PIPESTATUS[0]} -eq 22 ]] ; then
      echo "$combo packages not found, skipping"
      continue
    fi
    if [ $combo_count -gt $current_highest_count ]; then
      current_highest_count=$combo_count
      highest_combo=$combo
    fi
  done

  echo "Found the most packages ($current_highest_count) in $highest_combo."
fi

# Check the the DEB and RPM chacra endpoints to see if the repos are or need updating.
# This helps prevent packages from getting missed when signing and pushing.
need_rerun=false
for endpoint in https://chacra.ceph.com/repos/$project/$release/$sha1/centos/9 https://chacra.ceph.com/repos/$project/$release/$sha1/$highest_combo; do
  chacra_repo_status=$(curl -s -L $endpoint)
  chacra_needs_update=$(echo $chacra_repo_status | jq .needs_update)
  chacra_is_updating=$(echo $chacra_repo_status  | jq .is_updating)

  if [ "$chacra_needs_update" == "true" ] || [ "$chacra_is_updating" == "true" ]; then
    need_rerun=true
  fi
done

relver=$release

if [[ "$project" == "ceph" ]] ; then
  # Get numerical version
  version=$(echo $chacra_repo_status | jq -r .extra.version)
  relver=$release-$version
  [[ -d /opt/repos/$project/$relver ]] || mkdir -p /opt/repos/$project/$relver/{debian/jessie,centos/9}
else
  # not ceph (i.e. ceph-iscsi)
  [[ -d /opt/repos/$project/$relver ]] || mkdir -p /opt/repos/$project/$relver/centos/9
fi

if [[ "$project" == "ceph" ]] ; then
  # Replace $highest_combo with your own DISTRO/VERSION if you don't want to sync from the repo with the most packages.
  if [[ -n "$highest_combo" ]] ; then
    deb_cmd="ubuntu@chacra.ceph.com:/opt/repos/$project/$release/$sha1/$highest_combo/flavors/default/* /opt/repos/$project/$relver/debian/jessie/"
    echo $deb_cmd
    echo "--------------------------------------------"
    rsync -Lavh --progress --exclude '*lockfile*' $deb_cmd
  fi
fi

for el_version in 9; do
  el_cmd="ubuntu@chacra.ceph.com:/opt/repos/$project/$release/$sha1/centos/$el_version/flavors/default/* /opt/repos/$project/$relver/centos/$el_version/"
  echo $el_cmd
  echo "--------------------------------------------"
  rsync -Lavh --progress $el_cmd
done

if [[ "$project" == "ceph" ]]; then
  ssh signer@download.ceph.com "/home/signer/bin/get-tarballs.sh $release $sha1 $version"
fi

if $need_rerun; then
  echo
  echo "********************************************"
  echo
  echo "At least one of the Chacra repos synced was "
  echo "  still updating before the rsync started."
  echo "       You should re-run this script!"
  echo
  echo "********************************************"
fi
