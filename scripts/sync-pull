#!/bin/bash

: ${3?"Usage: $0 \$project \$release \$sha1"}
  #  Script exits here if command-line parameter absent,
  #+ with following error message.
  #    usage-message.sh: 1: Usage: sync-pull $project $release $sha1

project=${1}
release=${2}
sha1=${3}

echo "sync for: $project $release"
echo "********************************************"

# This ugly loop check all possible DEB combinations to see which repo has the most packages since that's likely the repo you want to sync.
current_highest_count=0
for combo in debian/bookworm debian/bullseye ubuntu/bionic ubuntu/focal ubuntu/jammy; do
  combo_count=$(curl -s https://chacra.ceph.com/r/$project/$release/$sha1/${combo}/flavors/default/pool/main/c/ceph/ | wc -l)
  if [ $combo_count -gt $current_highest_count ]; then
    current_highest_count=$combo_count
    highest_combo=$combo
  fi
done

echo "Found the most packages ($current_highest_count) in $highest_combo."

# Check the the DEB and RPM chacra endpoints to see if the repos are or need updating.
# This helps prevent packages from getting missed when signing and pushing.
need_rerun=false
for endpoint in https://chacra.ceph.com/repos/$project/$release/$sha1/centos/{7,8,9} https://chacra.ceph.com/repos/$project/$release/$sha1/$highest_combo; do
  chacra_repo_status=$(curl -s -L $endpoint)
  chacra_needs_update=$(echo $chacra_repo_status | jq .needs_update)
  chacra_is_updating=$(echo $chacra_repo_status  | jq .is_updating)

  if [ "$chacra_needs_update" == "true" ] || [ "$chacra_is_updating" == "true" ]; then
    need_rerun=true
  fi
done

# We started using the new /opt/repos/ceph/$release-X.X.X format with Octopus.
# Older releases have all packages in one big $release dir without a trailing "-X.X.X" so we need to adjust paths accordingly.
if [[ "$release" =~ ^[a-n].* ]]; then
  newgen=false
else
  newgen=true
  # Get numerical version number (we only need this with Octopus or later because of the new directory/path scheme).
  version=$(echo $chacra_repo_status | jq -r .extra.version)
  [[ -d /opt/repos/$project/$release-$version ]] | mkdir -p /opt/repos/$project/$release-$version/{debian/jessie,centos/{7,8,9}}
fi

# Replace $highest_combo with your own DISTRO/VERSION if you don't want to sync from the repo with the most packages.
if $newgen; then
  deb_cmd="ubuntu@chacra.ceph.com:/opt/repos/$project/$release/$sha1/$highest_combo/flavors/default/* /opt/repos/$project/$release-$version/debian/jessie/"
else
  deb_cmd="ubuntu@chacra.ceph.com:/opt/repos/$project/$release/$sha1/$highest_combo/flavors/default/* /opt/repos/$project/$release/debian/jessie/"
fi
echo $deb_cmd
echo "--------------------------------------------"
rsync -Lavh --progress --exclude '*lockfile*' $deb_cmd

for el_version in 7 8 9; do
  if $newgen; then
    el_cmd="ubuntu@chacra.ceph.com:/opt/repos/$project/$release/$sha1/centos/$el_version/flavors/default/* /opt/repos/$project/$release-$version/centos/$el_version/"
  else
    el_cmd="ubuntu@chacra.ceph.com:/opt/repos/$project/$release/$sha1/centos/$el_version/flavors/default/* /opt/repos/$project/$release/centos/$el_version/"
  fi
  echo $el_cmd
  echo "--------------------------------------------"
  rsync -Lavh --progress $el_cmd
done

ssh signer@download.ceph.com "/home/signer/bin/get-tarballs.sh $release $sha1 $version"

if $need_rerun; then
  echo
  echo "********************************************"
  echo
  echo "At least one of the Chacra repos synced was "
  echo "  still updating before the rsync started."
  echo "       You should re-run this script!"
  echo
  echo "********************************************"
fi
