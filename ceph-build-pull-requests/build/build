#!/bin/bash

set -e

"$WORKSPACE/scripts/setup_uv.sh"
PATH=$PATH:$HOME/.local/bin
uv venv

pkgs=( "ansible" "ansible-core" "git+https://opendev.org/jjb/jenkins-job-builder@60f0316389" "urllib3==1.26.1" "pyopenssl" "ndg-httpsclient" "pyasn1" "xmltodict" )
VENV=./.venv/bin
uv pip install "${pkgs[@]}"

rm -rf xml
# Test every definition if available in the current repository and update the jobs
# if they do define one (they should always define their definitions)
for dir in `find . -maxdepth 1 -path ./.git -prune -o -type d -print`; do
    definitions_dir="$dir/config/definitions"
    if [ -d "$definitions_dir" ]; then
        echo "found definitions directory: $definitions_dir"

        # Test the definitions
        $VENV/jenkins-jobs test $definitions_dir --config-xml -o ./xml > /dev/null
    fi
done

dpkg -l shellcheck >/dev/null 2>&1 || sudo apt install -y shellcheck
PATH=$PATH:$VENV find ./xml -name '*.xml' -print0 | xargs -0 -L1 "$WORKSPACE/scripts/shellcheck_job.py"

# install ansible-galaxy roles for playbook syntax check
for reqs in $WORKSPACE/ansible/requirements/*; do
    $VENV/ansible-galaxy install -r $reqs -p $WORKSPACE/ansible/roles --force
done

# To avoid moving everything into examples, including stuff that is not relevant
# as an example, we copy them on the fly here
cp -r $WORKSPACE/ansible/vars $WORKSPACE/ansible/examples/
cp -r $WORKSPACE/ansible/roles $WORKSPACE/ansible/examples/
cp -r $WORKSPACE/ansible/files $WORKSPACE/ansible/examples/
cp -r $WORKSPACE/ansible/library $WORKSPACE/ansible/examples/
cp -r $WORKSPACE/ansible/templates $WORKSPACE/ansible/examples/
cp $WORKSPACE/ansible/release.yml $WORKSPACE/ansible/examples/


# Syntax-check each Ansible playbook
for playbook in $WORKSPACE/ansible/examples/*.yml; do
    $VENV/ansible-playbook -i '127.0.0.1,' $playbook --syntax-check
done
