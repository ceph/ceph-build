#!/bin/bash

set -ex
HOST=$(hostname --short)
echo "Building on $(hostname)"
echo "  DIST=${DIST}"
echo "  BPTAG=${BPTAG}"
echo "  KEYID=${KEYID}"
echo "  WS=$WORKSPACE"
echo "  PWD=$(pwd)"
echo "  BUILD SOURCE=$COPYARTIFACT_BUILD_NUMBER_CEPH_SETUP"
echo "*****"
env
echo "*****"

#DIR=/tmp/install-deps.$$
#trap "rm -fr $DIR" EXIT
#mkdir -p $DIR
if test $(id -u) != 0 ; then
    SUDO=sudo
fi
export LC_ALL=C # the following is vulnerable to i18n

cd dist
ORIGTAR=(*.orig.tar.gz)
ORIGDIR=${ORIGTAR%.orig.tar.gz}
ORIGDIR=${ORIGDIR//_/-}
tar xzf $ORIGTAR
cd $ORIGDIR
pwd

BRANCH=`branch_slash_filter $BRANCH`

cd $WORKSPACE

vers=$(cat ./dist/version)
raw_version=`echo $vers | cut -d '-' -f 1`

RELEASE_BRANCH=$(release_from_version $raw_version)
case $RELEASE_BRANCH in
tentacle)
    DISTRO=opensuse
    RELEASE="15.3"
    ;;
squid)
    DISTRO=opensuse
    RELEASE="15.3"
    ;;
reef)
    DISTRO=opensuse
    RELEASE="15.3"
    ;;
*)
    echo Not supported release '$RELEASE_BRANCH' by openSUSE
    exit 1
    ;;
esac

DIST=leap${RELEASE%%.*}

NORMAL_DISTRO=$DISTRO
NORMAL_DISTRO_VERSION=$RELEASE
NORMAL_ARCH=$ARCH

# create build status in shaman
update_build_status "started" "ceph" $NORMAL_DISTRO $NORMAL_DISTRO_VERSION $NORMAL_ARCH

pkgs=( "chacractl>=0.0.21" )
TEMPVENV=$(create_venv_dir)
VENV=${TEMPVENV}/bin
install_python_packages $TEMPVENV "pkgs[@]"

# ask shaman which chacra instance to use
chacra_url=`curl -u $SHAMAN_API_USER:$SHAMAN_API_KEY https://shaman.ceph.com/api/nodes/next/`
# create the .chacractl config file using global variables
make_chacractl_config $chacra_url

dist=$DIST
[ -z "$dist" ] && echo no dist && exit 1
echo dist $dist

chacra_ref="$BRANCH"
chacra_endpoint="ceph/${chacra_ref}/${SHA1}/${DISTRO}/${RELEASE}"
chacra_check_url="${chacra_endpoint}/${ARCH}/flavors/${FLAVOR}/librados2-${vers}-0.${DIST}.${ARCH}.rpm"


if [ "$THROWAWAY" = false ] ; then
    # this exists in scripts/build_utils.sh
    # TODO if this exits we need to post to shaman a success
    check_binary_existence $VENV $chacra_check_url
fi
