#!/bin/bash

# the following two methods exist in scripts/build_utils.sh
pkgs=( "tox" )
TEMPVENV=$(create_venv_dir)
VENV=${TEMPVENV}/bin
install_python_packages $TEMPVENV "pkgs[@]"

# XXX this might not be needed
source $VENV/activate

WORKDIR=$(mktemp -td tox.XXXXXXXXXX)
page_size=100

#############
# FUNCTIONS #
#############
function find_latest_tag {
  release="$1"
  el="7"
  if [[ "${release}" =~ octopus|pacific ]]; then
    el="8"
  fi
  page=1
  while response=$(curl -s "https://quay.ceph.io/api/v1/repository/ceph-ci/daemon/tag/?page=${page}&limit=${page_size}"); do
    tag=$(echo "${response}" | jq -r ".tags[] | select((.name | contains(\"stable\")) and (.name | contains(\"${release}-centos-${el}-x86_64\"))) | .name")
    if [ -n "${tag}" ]; then
      echo "${tag}" | head -n 1 | cut -d '"' -f 2
      return
    fi
    if [ $(echo "${response}" | jq -r .has_additional) == "false" ]; then
      break
    else
      let page++
    fi
  done
}

function run_tox {
  case "$CEPH_ANSIBLE_BRANCH" in
    stable-*)
      CEPH_DOCKER_IMAGE_TAG=$(find_latest_tag "$RELEASE")
      ;;
    master)
      CEPH_DOCKER_IMAGE_TAG="latest-master"
      ;;
  esac

  [ -n "$CEPH_DOCKER_IMAGE_TAG" ] && start_tox $TEMPVENV  CEPH_DOCKER_IMAGE_TAG="$CEPH_DOCKER_IMAGE_TAG"
}

########
# MAIN #
########
delete_libvirt_vms
clear_libvirt_networks
restart_libvirt_services
update_vagrant_boxes
run_tox
