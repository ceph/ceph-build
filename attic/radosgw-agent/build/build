#!/bin/bash

set -ex

HOST=$(hostname --short)
echo "Building on ${HOST}"
echo "  DIST=${DIST}"
echo "  BPTAG=${BPTAG}"
echo "  WS=$WORKSPACE"
echo "  PWD=$(pwd)"
echo "  BRANCH=$BRANCH"
echo "  SHA1=$GIT_COMMIT"
ls -l


# the following two methods exist in scripts/build_utils.sh
pkgs=( "chacractl>=0.0.21" )
TEMPVENV=$(create_venv_dir)
VENV=${TEMPVENV}/bin
install_python_packages $TEMPVENV "pkgs[@]"

# create the .chacractl config file using global variables
make_chacractl_config

# set chacra variables
[ "$FORCE" = true ] && chacra_flags="--force" || chacra_flags=""
[ "$TEST" = true ] && chacra_ref="test" || chacra_ref="$BRANCH"

if [[ -f /etc/redhat-release || -f /usr/bin/zypper ]] ; then
        rm -rf ./dist  # Remove any previous artifacts
        mkdir -p $WORKSPACE/dist/noarch
        mkdir -p $WORKSPACE/dist/SRPMS
        mkdir -p $WORKSPACE/dist/SPECS
        mkdir -p $WORKSPACE/dist/SOURCES

        # create the DISTRO and DISTRO_VERSION variables
        # get_rpm_dist is located in scripts/build_utils.sh
        get_rpm_dist

        chacra_endpoint="radosgw-agent/${chacra_ref}/${GIT_COMMIT}/${DISTRO}/${DISTRO_VERSION}"

        check_binary_existence $VENV $chacra_endpoint/noarch

        suse=$(uname -n | grep -ic -e suse -e sles || true)
        if [ $suse -gt 0 ]
        then
            python setup.py clean
            python setup.py bdist_rpm
            if [ $? -eq 0 ]
            then
                find dist -name "*.noarch.rpm" | $VENV/chacractl binary ${chacra_flags} create ${chacra_endpoint}/noarch
                find dist -name "*.src.rpm" | $VENV/chacractl binary ${chacra_flags} create ${chacra_endpoint}/source
            fi
        else
            python setup.py clean
            python setup.py sdist --formats=gztar
            rpmdev-setuptree
            rpmdev-wipetree
            cp -avf ./dist/*.gz $HOME/rpmbuild/SOURCES
            cp -avf radosgw-agent.spec $WORKSPACE/dist/SPECS
            rpmbuild -ba $WORKSPACE/dist/SPECS/radosgw-agent.spec --target noarch
            if [ $? -ne 0 ] ; then
                rm -Rvf $WORKSPACE/dist/${DIST}/
            else
                find $HOME/rpmbuild -name "*.noarch.rpm" | $VENV/chacractl binary ${chacra_flags} create ${chacra_endpoint}/noarch
                find $HOME/rpmbuild -name "*.src.rpm" | $VENV/chacractl binary ${chacra_flags} create ${chacra_endpoint}/source
            fi
        fi
else
        # XXX MAGICAL, Fix this
        DEB_VERSION=$(dpkg-parsechangelog | sed -rne 's,^Version: (.*),\1, p')
        BP_VERSION=${DEB_VERSION}${BPTAG}
        DEBEMAIL="adeza@redhat.com" dch -D $DIST --force-distribution -b -v "$BP_VERSION" "$comment"

        DEB_BUILD=$(lsb_release -s -c)
        DISTRO=`python -c "exec 'import platform; print platform.linux_distribution()[0].lower()'"`

        chacra_endpoint="radosgw-agent/${chacra_ref}/${GIT_COMMIT}/${DISTRO}/${DEB_BUILD}/noarch"

        check_binary_existence $VENV $chacra_endpoint

        dpkg-source -b .
        # we no longer sign the .dsc or .changes files (done by default with
        # the `-k$KEYID` flag), so explicitly tell the tool not to sign them
        dpkg-buildpackage -uc -us
        RC=$?
        if [ $RC -eq 0 ] ; then
            cd $WORKSPACE

            # push binaries to chacra
            # the binaries are created in one directory up from $WORKSPACE
            find ../ | egrep "*\.(changes|deb|dsc|gz)$" | egrep -v "(Packages|Sources|Contents)" | $VENV/chacractl binary ${chacra_flags} create ${chacra_endpoint}
        fi
fi
