#! /usr/bin/bash
set -ex

BRANCH=`branch_slash_filter $BRANCH`

# Only do actual work when we are an RPM distro
if test "$DISTRO" != "fedora" -a "$DISTRO" != "centos" -a "$DISTRO" != "rhel"; then
    exit 0
fi

## Install any setup-time deps
# We need these for the build
sudo yum install -y python-devel epydoc python-setuptools systemd-units

# We use fpm to create the package
sudo yum install -y rubygems ruby-devel
sudo gem install fpm


## Get some basic information about the system and the repository
# Get version
get_rpm_dist
VERSION="$(git describe --abbrev=0 --tags HEAD | sed -e 's/v//1;')"
REVISION="$(git describe --tags HEAD | sed -e 's/v//1;' | cut -d - -f 2- | sed 's/-/./')"
if [ "$VERSION" = "$REVISION" ]; then
  REVISION="1"
fi

## Create the package
# Make sure there are no other packages, first
rm -f *.rpm

# Adjust the version dependency on pyudev since EL7 doesn't have 0.16
sed -i "s/'pyudev >=[^']*'/'pyudev >= 0.15'/" setup.py

# Create the package
fpm -s python -t rpm -n python-rtslib -v ${VERSION} --iteration ${REVISION} -d python-kmod -d python-six -d python-pyudev setup.py


## Upload the created RPMs to chacra
chacra_endpoint="python-rtslib/${BRANCH}/${GIT_COMMIT}/${DISTRO}/${RELEASE}"

[ "$FORCE" = true ] && chacra_flags="--force" || chacra_flags=""

# push binaries to chacra
find *.rpm | $VENV/chacractl binary ${chacra_flags} create ${chacra_endpoint}/noarch/
PACKAGE_MANAGER_VERSION=$(rpm --queryformat '%{VERSION}-%{RELEASE}\n' -qp $(find *.rpm | egrep "\.noarch\.rpm" | head -1))

# write json file with build info
cat > $WORKSPACE/repo-extra.json << EOF
{
    "version":"$VERSION",
    "package_manager_version":"$PACKAGE_MANAGER_VERSION",
    "build_url":"$BUILD_URL",
    "root_build_cause":"$ROOT_BUILD_CAUSE",
    "node_name":"$NODE_NAME",
    "job_name":"$JOB_NAME"
}
EOF
# post the json to repo-extra json to chacra
curl -X POST -H "Content-Type:application/json" --data "@$WORKSPACE/repo-extra.json" -u $CHACRACTL_USER:$CHACRACTL_KEY ${chacra_url}repos/${chacra_endpoint}/extra/

# start repo creation
$VENV/chacractl repo update ${chacra_endpoint}

echo Check the status of the repo at: https://shaman.ceph.com/api/repos/${chacra_endpoint}
