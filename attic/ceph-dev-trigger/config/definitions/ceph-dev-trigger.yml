- job:
    disabled: true
    name: ceph-dev-trigger
    node: built-in
    project-type: freestyle
    defaults: global
    quiet-period: 5
    block-downstream: false
    block-upstream: false
    properties:
      - build-discarder:
          days-to-keep: 1
          num-to-keep: 10
          artifact-days-to-keep: -1
          artifact-num-to-keep: -1
      - github:
          url: https://github.com/ceph/ceph
    discard-old-builds: true

    triggers:
      - github

    scm:
      - git:
          url: https://github.com/ceph/ceph
          browser: auto
          branches:
            - 'origin/main'
            - 'origin/quincy'
            - 'origin/reef'
            - 'origin/squid'
          skip-tag: true
          timeout: 20
          wipe-workspace: true

    builders:
      # build quincy on:
      # default: focal centos8 leap15
      - conditional-step:
          condition-kind: regex-match
          regex: .*quincy.*
          label: '${GIT_BRANCH}'
          on-evaluation-failure: dont-run
          steps:
            - shell:
                !include-raw:
                - ../../../scripts/build_utils.sh
                - ../../build/notify
            - trigger-builds:
                - project: 'ceph-dev'
                  predefined-parameters: |
                    BRANCH=${GIT_BRANCH}
                    FORCE=True
                    DISTROS=focal centos8 leap15
      # build reef on:
      # default: jammy focal centos8 centos9
      # crimson: centos9
      - conditional-step:
          condition-kind: regex-match
          regex: .*reef.*
          label: '${GIT_BRANCH}'
          on-evaluation-failure: dont-run
          steps:
            - shell:
                !include-raw:
                - ../../../scripts/build_utils.sh
                - ../../build/notify
            - trigger-builds:
                - project: 'ceph-dev'
                  predefined-parameters: |
                    BRANCH=${GIT_BRANCH}
                    FORCE=True
                    DISTROS=jammy focal centos8 centos9
                - project: 'ceph-dev'
                  predefined-parameters: |
                    BRANCH=${GIT_BRANCH}
                    FORCE=True
                    DISTROS=centos8 centos9
                    FLAVOR=crimson
      # build squid on:
      # default: jammy focal centos8 centos9
      # crimson: centos8 centos9
      - conditional-step:
          condition-kind: regex-match
          regex: .*squid.*
          label: '${GIT_BRANCH}'
          on-evaluation-failure: dont-run
          steps:
            - shell:
                !include-raw:
                - ../../../scripts/build_utils.sh
                - ../../build/notify
            - trigger-builds:
                - project: 'ceph-dev'
                  predefined-parameters: |
                    BRANCH=${GIT_BRANCH}
                    FORCE=True
                    DISTROS=jammy focal centos8 centos9
                - project: 'ceph-dev'
                  predefined-parameters: |
                    BRANCH=${GIT_BRANCH}
                    FORCE=True
                    DISTROS=centos9
                    FLAVOR=crimson
      # build main on:
      # default: jammy focal centos8 centos9
      # crimson: centos9
      - conditional-step:
          condition-kind: regex-match
          regex: .*main.*
          label: '${GIT_BRANCH}'
          on-evaluation-failure: dont-run
          steps:
            - shell:
                !include-raw:
                - ../../../scripts/build_utils.sh
                - ../../build/notify
            - trigger-builds:
                - project: 'ceph-dev'
                  predefined-parameters: |
                    BRANCH=${GIT_BRANCH}
                    FORCE=True
                    DISTROS=jammy focal centos8 centos9
                - project: 'ceph-dev'
                  predefined-parameters: |
                    BRANCH=${GIT_BRANCH}
                    FORCE=True
                    DISTROS=centos9
                    FLAVOR=crimson

    wrappers:
      - inject-passwords:
          global: true
          mask-password-params: true
      - credentials-binding:
          - text:
              credential-id: shaman-api-key
              variable: SHAMAN_API_KEY
