#! /usr/bin/bash
set -ex

PROJECT=ceph-iscsi-config
BRANCH=`branch_slash_filter $BRANCH`

# Only do actual work when we are an RPM distro
if test "$DISTRO" != "fedora" -a "$DISTRO" != "centos" -a "$DISTRO" != "rhel"; then
    exit 0
fi

# Install the dependencies
sudo yum install -y mock

## Get some basic information about the system and the repository
# Get version
get_rpm_dist
VERSION="$(git describe --abbrev=0 --tags HEAD)"
REVISION="$(git describe --tags HEAD | cut -d - -f 2- | sed 's/-/./')"
if [ "$VERSION" = "$REVISION" ]; then
  REVISION="1"
fi

# Create dummy dist tar
tar cf dist/${PROJECT}-${VERSION}.tar.gz \
	--exclude .git --exclude dist \
	--transform "s,^,${PROJECT}-${VERSION}/," *
tar tfv dist/${PROJECT}-${VERSION}.tar.gz

# Update spec version
sed -i "s/^Version:.*$/Version:\t${VERSION}/g" $WORKSPACE/${PROJECT}.spec
sed -i "s/^Release:.*$/Release:\t${REVISION}%{?dist}/g" $WORKSPACE/${PROJECT}.spec
# for debugging
cat $WORKSPACE/${PROJECT}.spec

# Update setup.py version
sed -i "s/version=\"[^\"]*\"/version=\"${VERSION}\"/g" $WORKSPACE/setup.py
# for debugging
cat $WORKSPACE/setup.py

## Create the source rpm
echo "Building SRPM"
rpmbuild \
    --define "_sourcedir $WORKSPACE/dist" \
    --define "_specdir $WORKSPACE/dist" \
    --define "_builddir $WORKSPACE/dist" \
    --define "_srcrpmdir $WORKSPACE/dist/SRPMS" \
    --define "_rpmdir $WORKSPACE/dist/RPMS" \
    --nodeps -bs $WORKSPACE/${PROJECT}.spec
SRPM=$(readlink -f $WORKSPACE/dist/SRPMS/*.src.rpm)

## Build the binaries with mock
echo "Building RPMs"
sudo mock --verbose -r ${MOCK_TARGET}-${RELEASE}-${ARCH} --scrub=all
sudo mock --verbose -r ${MOCK_TARGET}-${RELEASE}-${ARCH} --resultdir=$WORKSPACE/dist/RPMS/ ${SRPM} || ( tail -n +1 $WORKSPACE/dist/RPMS/{root,build}.log && exit 1 )

## Upload the created RPMs to chacra
chacra_endpoint="${PROJECT}/${BRANCH}/${GIT_COMMIT}/${DISTRO}/${RELEASE}"

[ "$FORCE" = true ] && chacra_flags="--force" || chacra_flags=""

# push binaries to chacra
find $WORKSPACE/dist/RPMS/ | egrep "\.noarch\.rpm" | $VENV/chacractl binary ${chacra_flags} create ${chacra_endpoint}/noarch/
PACKAGE_MANAGER_VERSION=$(rpm --queryformat '%{VERSION}-%{RELEASE}\n' -qp $(find $WORKSPACE/dist/RPMS/ | egrep "\.noarch\.rpm" | head -1))

# write json file with build info
cat > $WORKSPACE/repo-extra.json << EOF
{
    "version":"$VERSION",
    "package_manager_version":"$PACKAGE_MANAGER_VERSION",
    "build_url":"$BUILD_URL",
    "root_build_cause":"$ROOT_BUILD_CAUSE",
    "node_name":"$NODE_NAME",
    "job_name":"$JOB_NAME"
}
EOF
# post the json to repo-extra json to chacra
curl -X POST -H "Content-Type:application/json" --data "@$WORKSPACE/repo-extra.json" -u $CHACRACTL_USER:$CHACRACTL_KEY ${chacra_url}repos/${chacra_endpoint}/extra/

# start repo creation
$VENV/chacractl repo update ${chacra_endpoint}

echo Check the status of the repo at: https://shaman.ceph.com/api/repos/${chacra_endpoint}
